version: '3.8'

services:
  web:
    build:
      context: ./bigshop
      dockerfile: Dockerfile.prod
    command: gunicorn bigshop.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - 8000:8000
    restart:
      "always"
    env_file:
      - ./.env
    depends_on:
      - db

  celery:
    build:
      context: ./bigshop
      dockerfile: Dockerfile.celery
    command: celery -A bigshop worker
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    restart:
      "always"
    env_file:
      - ./.env
    depends_on:
      - redis
  redis:
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    restart:
      "always"

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media

    ports:
      - 80:80
    depends_on:
      - web
    restart:
      "always"

volumes:
  postgres_data:
  static_volume:
  media_volume:
